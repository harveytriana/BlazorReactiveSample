@implements IDisposable
@inject AuthState _authState

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Blazor Reactive Sample</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @foreach (var i in Enumerable.Range(1, 4)) {
            var s = $"Sample-{i}";
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@s">
                    <span class="oi oi-cog" aria-hidden="true"></span> @s
                </NavLink>
            </li>
        }

        @if (isAdmin) {
            @foreach (var i in adminFunctions) {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@i" @onclick:preventDefault="true">
                        <span class="oi oi-cloud" aria-hidden="true"></span> @i
                    </NavLink>
                </li>
            }
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu() => collapseNavMenu = !collapseNavMenu;

    #region ** Sample 3 **
    string[] adminFunctions = new string[] {
        "Manage Users", "Site Metric", "Database Backup"
    };
    bool isAdmin;

    // subscribe global event
    protected override void OnInitialized()
    {
        _authState.OnChange += AuthHasChanged;
    }
    // unsubscrobe global event
    public void Dispose()
    {
        _authState.OnChange -= AuthHasChanged;
    }
    // handle the event
    void AuthHasChanged()
    {
        isAdmin = _authState.Status == LoginStatus.LoggedIn;
        StateHasChanged();
    }
    #endregion
}
